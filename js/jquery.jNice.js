/* * jNice * version: 1.0 (11.26.08) * by Sean Mooney (sean@whitespace-creative.com)  * Examples at: http://www.whitespace-creative.com/jquery/jnice/ * Dual licensed under the MIT and GPL licenses: *   http://www.opensource.org/licenses/mit-license.php *   http://www.gnu.org/licenses/gpl.html * * To Use: place in the head  *  <link href="inc/style/jNice.css" rel="stylesheet" type="text/css" /> *  <script type="text/javascript" src="inc/js/jquery.jNice.js"></script> * * And apply the jNice class to the form you want to style * * To Do: Add textareas, Add File upload * * updated by Ivan Kolesnikov (myivanko@gmail.com) * 29.12.10 ******************************************** */(function($){	$.fn.jNice = function(options){		var self = this;		var safari = $.browser.safari; /* We need to check for safari to fix the input:text problem */		/* Apply document listener */		//$(document).mousedown(checkExternalClick);		/* each form */		return this.each(function(){			$('input:submit, input:reset, input:button', this).each(ButtonAdd);			$('button').focus(function(){ $(this).addClass('jNiceFocus')}).blur(function(){ $(this).removeClass('jNiceFocus')});			$('input:text:visible, input:password', this).each(TextAdd);			$('textarea', this).each(TextAreaAdd);			$('input:file', this).each(FileAdd);			/* If this is safari we need to add an extra class */			//if (safari){$('.jNiceInputWrapper').each(function(){$(this).addClass('jNiceSafari').find('input').css('width', $(this).width()+11);});}			$('input:checkbox', this).each(CheckAdd);			//$('input:radio', this).each(RadioAdd);			$('select', this).each(function(index){ SelectAdd(this, index); });			/* Add a new handler for the reset action */			$(this).bind('reset',function(){var action = function(){ Reset(this); }; window.setTimeout(action, 10); });			$('.jNiceHidden').css({opacity:0});		});	};/* End the Plugin */	var Reset = function(form){		var sel;		$('.jNiceWrapperSelect select', form).each(function(){sel = (this.selectedIndex<0) ? 0 : this.selectedIndex; $('ul', $(this).parent()).each(function(){$('span:eq('+ sel +')', this).click();});});		$('a.jNiceCheckbox, a.jNiceRadio', form).removeClass('jNiceChecked');		$('input:checkbox, input:radio', form).each(function(){if(this.checked){$('a', $(this).parent()).addClass('jNiceChecked');}});	};	var RadioAdd = function(){		var $input = $(this).addClass('jNiceHidden').wrap('<span class="jRadioWrapper jNiceWrapper"></span>');		var $wrapper = $input.parent();		var $a = $('<span class="jNiceRadio"></span>');		$wrapper.prepend($a);		/* Click Handler */		$a.click(function(){				var $input = $(this).addClass('jNiceChecked').siblings('input').attr('checked',true);				/* uncheck all others of same name */				$('input:radio[name="'+ $input.attr('name') +'"]').not($input).each(function(){					$(this).attr('checked',false).siblings('.jNiceRadio').removeClass('jNiceChecked');				});				return false;		});		$input.click(function(){			if(this.checked){				var $input = $(this).siblings('.jNiceRadio').addClass('jNiceChecked').end();				/* uncheck all others of same name */				$('input:radio[name="'+ $input.attr('name') +'"]').not($input).each(function(){					$(this).attr('checked',false).siblings('.jNiceRadio').removeClass('jNiceChecked');				});			}		}).focus(function(){ $a.addClass('jNiceFocus'); }).blur(function(){ $a.removeClass('jNiceFocus'); });		/* set the default state */		if (this.checked){ $a.addClass('jNiceChecked'); }		if (this.disabled){ $a.addClass('jNiceDisabled'); }	};	var CheckAdd = function(){		var $input = $(this).addClass('jNiceHidden').wrap('<span class="jNiceWrapper jCheckboxWrapper"></span>');		var $wrapper = $input.parent().append('<span class="jNiceCheckbox"></span>');		/* Click Handler */		var $a = $wrapper.find('.jNiceCheckbox').click(function(){				var $a = $(this);				var input = $a.siblings('input')[0];				if (input.checked===true){					input.checked = false;					$a.removeClass('jNiceChecked');				}				else {					input.checked = true;					$a.addClass('jNiceChecked');				}				return false;		});		$input.click(function(){			if(this.checked){ $a.addClass('jNiceChecked'); }			else { $a.removeClass('jNiceChecked'); }		}).focus(function(){ $a.addClass('jNiceFocus'); }).blur(function(){ $a.removeClass('jNiceFocus'); });				/* set the default state */		if (this.checked){$('.jNiceCheckbox', $wrapper).addClass('jNiceChecked');}	};	var TextAdd = function(){		var oldClass = this.className;		var $input = $(this).addClass('jNiceInput').wrap('<div class="jNiceInputWrapper '+oldClass+'"><div class="jNiceInputInner"></div></div>');		var $wrapper = $input.parents('.jNiceInputWrapper');		$input.focus(function(){ 			$wrapper.addClass('jNiceInputWrapper_hover');		}).blur(function(){			$wrapper.removeClass('jNiceInputWrapper_hover');		});	};	var TextAreaAdd = function(){		var $tarea = $(this).addClass('jNiceTextArea').wrap('<div class="jNiceTextAreaWrapper"></div>');		var $wrapper = $tarea.parents('.jNiceTextAreaWrapper');		$wrapper.append('<i class="abl"></i><i class="abr"></i><i class="atl"></i><i class="atr"></i>');		$tarea.focus(function(){ 			$wrapper.addClass('jNiceTextAreaWrapper_hover');		}).blur(function(){			$wrapper.removeClass('jNiceTextAreaWrapper_hover');		});	};	var FileAdd = function(){		var $input = $(this).addClass('jNiceHidden').wrap('<div class="jNiceFile"></div>');		var $inner = $input.parent();		var title = $(this).attr('title');		var $asButton = $('<span><span>'+ title +'</span></span>');		$inner.prepend($asButton);		var $wrapper = $inner.wrap('<div class="jNiceFileWrapper"></div>').parent();		$wrapper.append('<div class="jNiceFilePath"></div>');		$(this).change(function() {			value = $(this).attr('value');			$wrapper.find('.jNiceFilePath').html(value);		});	};	var ButtonAdd = function(){		//var value = $(this).attr('value');		//var dsbl = '';		var dsblClass = '';		if ($(this).attr("disabled")) {			//dsbl = 'disabled="disabled"';			dsblClass = ' jNiceButtonDisabled';		}		/*$(this).replaceWith('<div class="jNiceButton'+ dsblClass +' '+ this.className +'"><div><button id="'+ this.id +'" name="'+ this.name +'" type="'+ this.type +'" class="'+ this.className +'" value="'+ value +'"'+ dsbl +'>'+ value +'</button></div></div>');*/		$(this).wrap('<div class="jNiceButton'+ dsblClass +' '+ this.className +'"><div></div></div>');		$(this).addClass('jNiceButtonInput');	};	/* Hide all open selects */	var SelectHide = function(){			$('.jNiceSelectWrapper .jNiceSelectList:visible').hide();	};	/* Check for an external click */	var checkExternalClick = function(event) {		if ($(event.target).parents('.jNiceSelectWrapper').length === 0) { SelectHide(); }	};	var SelectAdd = function(element, index) {		var select = element;		var $select = $(select);		var focusFlag = false;		if (select.multiple) {			var $mselect = $select.addClass('jNiceMultiSelect').wrap('<div class="jNiceMultiSelectWrapper"><div class="jNiceMultiSelectInner"></div></div>');			var $swrapper = $mselect.parents('.jNiceMultiSelectWrapper');			$swrapper.append('<i class="sbl"></i><i class="sbr"></i><i class="stl"></i><i class="str"></i>');			return false;		}		// add attribute 'size' to easy catch 'change' event		$select.attr('size', '2');		// set 'index' for right overlay		index = (index) ? index : 0;		// html layout		$select.wrap($('<div class="jNiceWrapperSelect"></div>').css({zIndex: 100 - index}));		$select.after('<div class="jNiceSelectWrapper"><div class="jNiceSelectCurrent"><span class="jNiceSelectText"></span><span class="jNiceSelectArrow"></span></div><div class="jNiceSelectList"><ul></ul><i class="sll"></i><i class="srr"></i></div></div>');		// add options to visual select		SelectBuild(select);		// set elements with which will working		var $wrapper = $select.siblings('.jNiceSelectWrapper');		var $list = $('.jNiceSelectList', $wrapper).hide();		var $ul = $('ul', $list);		if ($list.is(':visible')) {			$wrapper.addClass('jNiceSelectOpened');			$ul.scrollTop(Math.floor($ul.scrollTop() + $('span', $list).eq(select.selectedIndex).offset().top - $ul.offset().top));		} else {			$wrapper.removeClass('jNiceSelectOpened');		}		// if select is disabled		if (select.disabled) {			$wrapper.addClass('jNiceSelectDisabled');			return;		}		// on original select FOCUS		$select.focus(function() {			// add class to visual select			$wrapper.addClass('jNiceFocus');		}).blur(function() {			if (focusFlag) {				// return focus to original slect (except ie6-7 which don't allow drag scrollbar)				if (!($.browser.msie && $.browser.version < 8)) {					this.focus();				}			} else {				// remove class from visual select				$wrapper.removeClass('jNiceSelectFocus');				// close list				$list.slideUp(100);				$wrapper.removeClass('jNiceSelectOpened');			}		}).change(function selectChange() {			SelectUpdate(select);			// moving scroll with selected item			if ($wrapper.hasClass('jNiceSelectOpened')) {				var a = $ul.offset().top;				var b = $('span', $list).eq(select.selectedIndex).offset().top;				var c = $ul.height();				var d = $('span', $list).eq(select.selectedIndex).innerHeight();				var f = $ul.scrollTop();				if (b - a < 0) {					$ul.scrollTop(Math.floor(f + b - a));				} else if (a + c - b - d < 0) {					$ul.scrollTop(Math.floor(f - a - c + b + d));				}			}		}).keydown(function(e) {			// catching alt key, except webkit browsers which not support it			if (e.altKey && !$.browser.webkit) {				if (e.keyCode == 38 || e.keyCode == 40) {					//$list.slideToggle(100);					$list.toggle();					$wrapper.toggleClass('jNiceSelectOpened');					$ul.scrollTop(Math.floor($ul.scrollTop() + $('span', $list).eq(select.selectedIndex).offset().top - $ul.offset().top));				}			}			// catching keystrokes			switch (e.keyCode) {				case 9: // Tab					focusFlag = false;					break;				case 27: // Esc					$list.slideUp(100);					$wrapper.removeClass('jNiceSelectOpened');					break;				case 13: // Enter					$list.slideUp(100);					$wrapper.removeClass('jNiceSelectOpened');					// prevent form submit in webkit					return e.returnValue = false;					break;				default:					break;			}			// emulate change event for ie			if ($.browser.msie) {				$(this).change();			}		});		// prevent form submit in opera		if ($.browser.opera) {			$select.keypress(function(e) {				if (e.keyCode == 13) return e.returnValue = false;			});		};		// hard emulate change event for ie, for listen first key press		if ($.browser.msie) {			$select.keyup(function() {				$(this).change();			});		};		// on visual select CLICK		$wrapper.click(function() {			select.focus();			if ($list.is(':visible')) {				$list.slideUp(100);				$wrapper.removeClass('jNiceSelectOpened');			} else {				$list.slideDown(100);				$wrapper.addClass('jNiceSelectOpened');				$ul.scrollTop(Math.floor($ul.scrollTop() + $('span', $list).eq(select.selectedIndex).offset().top - $ul.offset().top));			}		}).mouseover(function() {			focusFlag = true;		}).mouseout(function() {			focusFlag = false;		});	};	var SelectBuild = function(element) {		// set elements with which will working		var select = element;		var $select = $(select);		var $list = $('.jNiceSelectList', $select.siblings('.jNiceSelectWrapper'));		var $ul = $('ul', $list);		var optionsList = '';		// add options to visual select		$('option', $select).each(function() {			optionsList += '<li><span index="'+ this.index +'" class="'+ this.value +'">'+ this.text +'</span></li>';		});		$ul.html(optionsList);		// set selected option text and mark selected item in list		SelectUpdate(element);		// add event for created items		$($list).click(function(e) {			if (e.target.nodeName.toLowerCase() == 'span') {				// set active option for keybord navigation				select.selectedIndex = e.target.getAttribute('index');				// apply choise				SelectUpdate(select);				$select.change();			}		});	};	var SelectUpdate = function(element) {		// set elements with which will working		var select = element;		var $wrapper = $(select).siblings('.jNiceSelectWrapper');		var $currentText = $('.jNiceSelectText', $wrapper);		var $list = $('.jNiceSelectList', $wrapper);		// get right selected element for default		select.selectedIndex < 0 ? select.selectedIndex = 0 : select.selectedIndex;		// set selected option text		$currentText.html(select.options[select.selectedIndex].text);		// mark selected item in list		var $selectedElement = $('span', $list).eq(select.selectedIndex);		$('span', $list).removeClass('selected');		$selectedElement.addClass('selected');	};	var SelectRemove = function(element){		var zIndex = $(element).siblings('.jNiceSelectWrapper').css('zIndex');		$(element).css({zIndex: zIndex}).removeClass('jNiceHidden');		$(element).siblings('.jNiceSelectWrapper').remove();	};	/* Utilities */	$.jNice = {			SelectAdd : function(element, index){ SelectAdd(element, index); },			SelectRemove : function(element){ SelectRemove(element); },			SelectUpdate : function(element){ SelectUpdate(element); }	};/* End Utilities */	/* Automatically apply to any forms with class jNice */	$(function(){$('form.jNice').jNice();});})(jQuery);