<?php
require_once('../class/config.php');
require_once(SITE_PATH . "/class/common.php");

$old_error_handler = set_error_handler("userErrorHandler");
hokusPokus();

require_once(SITE_PATH . "/class/".DB_TYPE.".class.php");
require_once(SITE_PATH . "/class/language.class.php");
require_once(SITE_PATH . "/class/text.class.php");
require_once(SITE_PATH . "/class/templatef.class.php");
require_once(SITE_PATH . "/class/Database.php");
require_once(SITE_PATH . "/class/IsicDB.php");
require_once(SITE_PATH . '/class/Isic/IsicEHLClient.php');

$db = new DB();
$db->connect();
$sq = new sql;

$sq->con = $db->con;
$database = new Database($sq);
load_site_settings($database);
$data = $data_settings = $GLOBALS['site_settings'];

// init language object
$lan = new Language($database, '');
$language = $lan->lan();
$GLOBALS["language"] = &$language;

$ehlClient = new IsicEHLClient();
$ehlClient->setOverrideExternalCheckFlag(true);
$isicDbUsers = IsicDB::factory('Users');

$personNumbers = array(
    '38703200317',
    '44009010238',
    '44012030221',
    '45208250215',
    '46407275228',
    '46701234912',
    '47011240230',
    '47205225234',
    '47607305716',
    '47610112722',
    '48105245214',
    '48205214929',
    '48903224914',
    '49011034715',
    '43805290220',
    '44501120248',
    '47511304222',
    '48010090228',
    '35004080241',
    '35305180283',
    '36002250017',
    '37811056524',
    '47601316037',
    '48601270310',
    '47808194214',
    '48805260286',
    '45210040237',
    '44207052713',
    '45206190010',
    '46508024225',
    '47602126527',
    '47911260075',
    '48001230341',
    '45312120286',
    '48602170255',
    '34901196017',
    '35103056527',
    '35709046513',
    '37008150217',
    '37510070357',
    '38102250100',
    '38204086529',
    '38810230254',
    '39005292746',
    '39007236517',
    '44603040334',
    '44612122722',
    '45110145236',
    '45112050229',
    '45201046013',
    '45203274236',
    '45304176036',
    '45404124718',
    '45512084217',
    '45611225215',
    '45709150295',
    '45802265228',
    '46208292734',
    '46501250279',
    '46510310278',
    '46601140247',
    '46712122729',
    '46804184218',
    '46809220263',
    '47001022216',
    '47011072734',
    '47103310257',
    '47104250305',
    '47208120323',
    '47407092230',
    '47803312249',
    '47812074911',
    '48002126533',
    '48206234229',
    '48209020335',
    '48310175737',
    '48507250214',
    '38203240287',
    '45703286513',
    '46707140280',
    '47006026523',
    '48007170011',
    '48102092721',
    '48807095235',
    '46408020278',
    '36108270293',
    '45511284246',
    '46801020222',
    '46812150214',
    '35010125218',
    '35310100294',
    '36307120231',
    '36312312710',
    '36603245715',
    '36606250251',
    '36805130221',
    '37002020263',
    '37112062745',
    '37305034713',
    '37509110216',
    '37801162719',
    '38001206519',
    '38304264220',
    '38403260361',
    '38702112732',
    '38703200222',
    '38705204217',
    '39101162724',
    '39312044212',
    '43004240299',
    '43905120223',
    '44711290214',
    '45003054912',
    '45102090340',
    '45411074224',
    '45509302717',
    '45604062730',
    '45609224210',
    '45701155218',
    '45702284214',
    '45802042712',
    '45808012787',
    '45808234218',
    '45901024222',
    '45901114210',
    '45907290248',
    '45910212711',
    '46001150269',
    '46002210306',
    '46003300398',
    '46011030286',
    '46011124218',
    '46103232725',
    '46109140228',
    '46110264228',
    '46205260275',
    '46207022740',
    '46208080226',
    '46208244220',
    '46210144233',
    '46212242734',
    '46302012711',
    '46302274225',
    '46305100230',
    '46309020269',
    '46403204228',
    '46411150219',
    '46412070341',
    '46412132716',
    '46505130300',
    '46508302714',
    '46602210400',
    '46604222738',
    '46606126523',
    '46606174226',
    '46606180310',
    '46608210245',
    '46612200343',
    '46703232754',
    '46808050278',
    '46811040218',
    '46903292736',
    '46905114221',
    '46911120257',
    '47003196029',
    '47005080327',
    '47010220320',
    '47010282737',
    '47103140255',
    '47107712725',
    '47108042747',
    '47210012726',
    '47302120373',
    '47303084227',
    '47305064914',
    '47305310284',
    '47306116019',
    '47307062762',
    '47310120258',
    '47310180267',
    '47403090249',
    '47508190217',
    '47509170220',
    '47607066029',
    '47607124220',
    '47611106011',
    '47707290268',
    '47803044214',
    '47807300323',
    '47904255717',
    '48005134212',
    '48101136037',
    '48101250347',
    '48102136521',
    '48106160264',
    '48201150355',
    '48201295210',
    '48206290250',
    '48301234229',
    '48309235222',
    '48403310072',
    '48706030359',
    '48803012735',
    '48805250442',
    '48805286017',
    '48810280224',
    '48903212761',
    '48908242741',
    '48912180219',
    '49212290280',
    '45005060299',
    '45212280014',
    '45303080028',
    '45402250333',
    '45906230289',
    '45907120237',
    '45912215211',
    '46205302756',
    '46504205211',
    '46804050034',
    '47410034914',
    '47507150010',
    '47803110026',
    '48508166017',
    '49001250041',
);

echo "================================================================================\n";
echo IsicDate::getCurrentTimeFormatted() . ": EHL SingleQuery Beg\n";
echo "--------------------------------------------------------------------------------\n";

foreach ($personNumbers as $personNumber) {
//    if (IsicPersonNumberValidator::isValid($personNumber)) {
        try {
            $user = $isicDbUsers->getIdByUserCode($personNumber);
            $isicDbUsers->updateRecord($user, array('ehl_status_check_allowed' => 1));
            $statusList = $ehlClient->getStatusListByUser($personNumber);
            echo $personNumber . ': ' . implode(',', $statusList ? $statusList : array()) . "\n";
        } catch (Exception $e) {
            echo $personNumber . ': ERROR: Caught Exception: ' . $e->getMessage() . "\n";
        }
//    } else {
//        echo $personNumber . ': Invalid person number' . "\n";
//    }
}

echo "--------------------------------------------------------------------------------\n";
echo IsicDate::getCurrentTimeFormatted() . ": EHL SingleQuery End\n";
echo "================================================================================\n";
